Religious Guru AI App – Requirements Document
🧭 Purpose
To provide users with neutral, comparative insights on religious and non-religious worldviews across various topics (e.g., afterlife, morality, purpose), using agentic AI architecture that consults dedicated expert agents and compiles summaries and charts.

🧱 System Architecture Overview
🔹 Agentic AI Framework
Coordinator Agent:


Receives user input (topic).


Queries 7 Religious Expert Agents.


Synthesizes responses.


Returns a summary paragraph + chart.


Expert Agents (one per belief system):


Atheism


Agnosticism


Christianity


Islam


Hinduism


Buddhism


Judaism


🔹 Language Models
Default LLM: GPT-4-turbo (initial prototype)


Optional fine-tuned fallback: Meta LLaMA 3 or Mixtral for open-source deployment


🔹 Agent Framework
LangGraph (Python):


Allows clear definition of expert nodes.


Enables retries and fallback logic.


Ideal for branching workflows and visualizable agent pipelines.



🖥️ Frontend Requirements
1. Topic Input
Text box for entering a topic


Dropdown of previously used topics


Submit button


2. Response Display
Summary Paragraph


Highlights similarities and differences across worldviews


Generated by Coordinator Agent


Comparative Chart/Table


Columns: Religion | Summary | Key Concepts | Afterlife Type (or topic-specific variant)


Simple, responsive UI table or graphic using Chart.js or D3.js


3. History Panel
Saved topic-response pairs


Clickable to re-view without re-querying agents


4. Footer
Disclaimer: "Information is AI-generated and intended for educational use. Always consult authoritative sources for theological guidance."



💾 Backend Requirements
Storage: Supabase (or Firebase) for:


User-entered topics


Agent responses


Render-ready chart data


APIs


Submit Topic


Fetch Responses


Fetch Chart Data


Save/Load History


